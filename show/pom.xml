<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>person.yx</groupId>
        <artifactId>dragon</artifactId>
        <version>1.0.1</version>
    </parent>

    <groupId>person.yx.dragon</groupId>
    <artifactId>dragon-show</artifactId>
    <version>1.0.1</version>
    <name>dragon-show</name>
    <description>a show service for dragon</description>
    <packaging>jar</packaging>

    <properties>
        <java.version>11</java.version>
        <application.runas>show</application.runas>
        <docker.image.prefix>yuexing14</docker.image.prefix>
        <docker.image.baseon>adoptopenjdk/openjdk11
        </docker.image.baseon>
        <docker.image.java.options>
            "-XX:+UseContainerSupport","-XX:InitialRAMPercentage=25","-XX:MaxRAMPercentage=90","-XX:+UnlockExperimentalVMOptions","-XX:+UseZGC"
        </docker.image.java.options>
        <docker.image.suffix>-dev</docker.image.suffix>
        <docker.image.java.parameters>"--spring.profiles.active=common,docker"</docker.image.java.parameters>

        <docker-maven-plugin.version>1.2.2</docker-maven-plugin.version>
        <appassembler-maven-plugin.version>2.1.0</appassembler-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <excludeProperties>
                        <excludeProperty>git.build.user.*</excludeProperty>
                        <excludeProperty>git.commit.user.*</excludeProperty>
                    </excludeProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>${apt-maven-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.querydsl</groupId>
                        <artifactId>querydsl-apt</artifactId>
                        <version>${querydsl.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                    </plugin>
                </plugins>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <version>${docker-maven-plugin.version}</version>
                            <configuration>
                                <imageName>
                                    ${docker.image.prefix}/${project.artifactId}${docker.image.suffix}:${project.version}
                                </imageName>
                                <baseImage>${docker.image.baseon}</baseImage>
                                <entryPoint>
                                    ["java",${docker.image.java.options},"-jar","/opt/${project.groupId}/${project.artifactId}/${project.version}/${project.build.finalName}.jar",${docker.image.java.parameters}]
                                </entryPoint>
                                <resources>
                                    <resource>
                                        <targetPath>/opt/${project.groupId}/${project.artifactId}/${project.version}/
                                        </targetPath>
                                        <directory>${project.build.directory}</directory>
                                        <include>${project.build.finalName}.jar</include>
                                    </resource>
                                </resources>
                                <forceTags>true</forceTags>
                                <imageTags>
                                    <imageTag>${project.version}</imageTag>
                                    <imageTag>latest</imageTag>
                                </imageTags>
                                <exposes>
                                    <expose>80</expose>
                                </exposes>
                                <!-- 以下两行是为了docker push到DockerHub使用的。 -->
                                <serverId>docker-hub</serverId>
<!--                                <registryUrl>https://reg.dockerhub.upenny.cn/</registryUrl>-->
                            </configuration>
                            <executions>
                                <execution>
                                    <id>build-image</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                    <configuration>
                                        <pullOnBuild>true</pullOnBuild>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>tag-image-version</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>tag</goal>
                                    </goals>
                                    <configuration>
                                        <image>${docker.image.prefix}/${project.artifactId}${docker.image.suffix}
                                        </image>
                                        <newName>
                                            ${docker.image.prefix}/${project.artifactId}${docker.image.suffix}:${project.version}
                                        </newName>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>tag-image-latest</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>tag</goal>
                                    </goals>
                                    <configuration>
                                        <image>${docker.image.prefix}/${project.artifactId}${docker.image.suffix}
                                        </image>
                                        <newName>
                                            ${docker.image.prefix}/${project.artifactId}${docker.image.suffix}:latest
                                        </newName>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>push-image-version</id>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>push</goal>
                                    </goals>
                                    <configuration>
                                        <imageName>
                                            ${docker.image.prefix}/${project.artifactId}${docker.image.suffix}:${project.version}
                                        </imageName>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>push-image-latest</id>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>push</goal>
                                    </goals>
                                    <configuration>
                                        <imageName>
                                            ${docker.image.prefix}/${project.artifactId}${docker.image.suffix}:latest
                                        </imageName>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>wrapper</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <appassembler-id>DragonShow</appassembler-id>
                <appassembler-mainClass>person.yx.dragon.show.Bootstrap</appassembler-mainClass>
                <appassembler-memoryUsage>1G</appassembler-memoryUsage>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                    </plugin>
                </plugins>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>appassembler-maven-plugin</artifactId>
                            <version>${appassembler-maven-plugin.version}</version>
                            <configuration>
                                <repositoryName>lib</repositoryName>
                                <binFolder>bin</binFolder>
                                <configurationDirectory>conf</configurationDirectory>
                                <copyConfigurationDirectory>true</copyConfigurationDirectory>
                                <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
                                <repositoryLayout>flat</repositoryLayout>
                                <encoding>UTF-8</encoding>
                                <logsDirectory>logs</logsDirectory>
                                <tempDirectory>temp</tempDirectory>
                                <useWildcardClassPath>true</useWildcardClassPath>
                                <externalDeltaPackDirectory>${project.basedir}/../site/wrapper
                                </externalDeltaPackDirectory>
                                <daemons>
                                    <daemon>
                                        <id>${appassembler-id}</id>
                                        <mainClass>${appassembler-mainClass}</mainClass>
                                        <platforms>
                                            <platform>jsw</platform>
                                        </platforms>
                                        <jvmSettings>
                                            <extraArguments>
                                                <extraArgument>-Xmx${appassembler-memoryUsage}</extraArgument>
                                                <extraArgument>-Xms${appassembler-memoryUsage}</extraArgument>
                                                <extraArgument>-XX:+UnlockExperimentalVMOptions</extraArgument>
                                                <extraArgument>-XX:+UseZGC</extraArgument>
                                            </extraArguments>
                                        </jvmSettings>
                                        <generatorConfigurations>
                                            <generatorConfiguration>
                                                <generator>jsw</generator>
                                                <includes>
                                                    <include>windows-x86-32</include>
                                                    <include>windows-x86-64</include>
                                                    <include>linux-x86-32</include>
                                                    <include>linux-x86-64</include>
                                                    <include>linux-armhf-64</include>
                                                    <include>macosx-universal-64</include>
                                                </includes>
                                                <configuration>
                                                    <property>
                                                        <name>configuration.directory.in.classpath.first</name>
                                                        <value>%APP_BASE%/conf</value>
                                                    </property>
                                                    <property>
                                                        <name>run.as.user.envvar</name>
                                                        <value>${application.runas}</value>
                                                    </property>
                                                    <property>
                                                        <name>wrapper.logfile.maxsize</name>
                                                        <value>128m</value>
                                                    </property>
                                                    <property>
                                                        <name>wrapper.logfile.maxfiles</name>
                                                        <value>16</value>
                                                    </property>
                                                </configuration>
                                            </generatorConfiguration>
                                        </generatorConfigurations>
                                    </daemon>
                                </daemons>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>generate-jsw-scripts</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>generate-daemons</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub Packages</name>
            <url>https://maven.pkg.github.com/yuexing14/dragon-lake</url>
        </repository>
    </distributionManagement>
</project>
